//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/Characters/SwitchControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @SwitchControls: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @SwitchControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""SwitchControls"",
    ""maps"": [
        {
            ""name"": ""Gameplay"",
            ""id"": ""5762699b-9449-4eec-aeb1-a0297127ea03"",
            ""actions"": [
                {
                    ""name"": ""DpadUp"",
                    ""type"": ""Button"",
                    ""id"": ""393245e0-ea7e-4a4d-8b76-f6a6099e3050"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""DpadDown"",
                    ""type"": ""Button"",
                    ""id"": ""fa741b75-a6cd-41c5-8eea-c06211ad88c3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""DpadRight"",
                    ""type"": ""Button"",
                    ""id"": ""90249647-b572-4c9d-a1e2-91d3e5d4c620"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""DpadLeft"",
                    ""type"": ""Button"",
                    ""id"": ""b0a3af84-de12-4985-ad9c-08fd7de8e62f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SwitchA"",
                    ""type"": ""Button"",
                    ""id"": ""b31f0df8-2663-47cc-b339-26cbedb963a3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SwitchB"",
                    ""type"": ""Button"",
                    ""id"": ""ff3f3f38-afd8-4231-892d-fad832287280"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SwitchX"",
                    ""type"": ""Button"",
                    ""id"": ""ba612340-99b8-45d9-bcc1-0c0d8499c623"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SwitchY"",
                    ""type"": ""Button"",
                    ""id"": ""20aa3326-3961-4595-941c-bace315c2da6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LeftStick"",
                    ""type"": ""Value"",
                    ""id"": ""6add4832-2e2b-425e-ae36-a941b6e00621"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""RightStick"",
                    ""type"": ""Value"",
                    ""id"": ""fc382560-e48c-48fe-8b2c-8f30182e7902"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""ee1e8456-f053-4d5d-9840-8f36a6a0c810"",
                    ""path"": ""<HID::Nintendo Wireless Gamepad>/hat/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DpadUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""185b298f-a433-4381-b32e-9ed16cf587f1"",
                    ""path"": ""<HID::Nintendo Wireless Gamepad>/hat/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DpadDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""997f31c6-384e-48f0-83e1-6b9f004c5389"",
                    ""path"": ""<HID::Nintendo Wireless Gamepad>/hat/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DpadRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7472285d-ad7a-4ca8-a820-d2cec07a32e7"",
                    ""path"": ""<HID::Nintendo Wireless Gamepad>/hat/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DpadLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3413ea9c-f6ab-43e5-9d82-7088200f75f9"",
                    ""path"": ""<HID::Nintendo Wireless Gamepad>/button2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwitchA"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""738be06c-4350-456a-a526-de0bbbb7ef4b"",
                    ""path"": ""<HID::Nintendo Wireless Gamepad>/trigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwitchB"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f70f2b94-412d-42b5-b68f-327bf03b4ec7"",
                    ""path"": ""<HID::Nintendo Wireless Gamepad>/button4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwitchX"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e563aba8-28be-4718-8b1e-d38836e86d0b"",
                    ""path"": ""<HID::Nintendo Wireless Gamepad>/button3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwitchY"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b0d75845-b955-4405-a0c2-684c66f395b6"",
                    ""path"": ""<HID::Nintendo Wireless Gamepad>/stick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftStick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""9a272adb-95cc-4e8a-8929-bcbf3eb68b58"",
                    ""path"": ""2DVector(mode=2)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightStick"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""0dcd01ba-bd0a-48fb-a4a6-3afcd5d23981"",
                    ""path"": ""<HID::Nintendo Wireless Gamepad>/ry"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightStick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""d1c3c6bd-160c-4a60-a9c3-5eec9751babd"",
                    ""path"": ""<HID::Nintendo Wireless Gamepad>/rx"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightStick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Gameplay
        m_Gameplay = asset.FindActionMap("Gameplay", throwIfNotFound: true);
        m_Gameplay_DpadUp = m_Gameplay.FindAction("DpadUp", throwIfNotFound: true);
        m_Gameplay_DpadDown = m_Gameplay.FindAction("DpadDown", throwIfNotFound: true);
        m_Gameplay_DpadRight = m_Gameplay.FindAction("DpadRight", throwIfNotFound: true);
        m_Gameplay_DpadLeft = m_Gameplay.FindAction("DpadLeft", throwIfNotFound: true);
        m_Gameplay_SwitchA = m_Gameplay.FindAction("SwitchA", throwIfNotFound: true);
        m_Gameplay_SwitchB = m_Gameplay.FindAction("SwitchB", throwIfNotFound: true);
        m_Gameplay_SwitchX = m_Gameplay.FindAction("SwitchX", throwIfNotFound: true);
        m_Gameplay_SwitchY = m_Gameplay.FindAction("SwitchY", throwIfNotFound: true);
        m_Gameplay_LeftStick = m_Gameplay.FindAction("LeftStick", throwIfNotFound: true);
        m_Gameplay_RightStick = m_Gameplay.FindAction("RightStick", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Gameplay
    private readonly InputActionMap m_Gameplay;
    private List<IGameplayActions> m_GameplayActionsCallbackInterfaces = new List<IGameplayActions>();
    private readonly InputAction m_Gameplay_DpadUp;
    private readonly InputAction m_Gameplay_DpadDown;
    private readonly InputAction m_Gameplay_DpadRight;
    private readonly InputAction m_Gameplay_DpadLeft;
    private readonly InputAction m_Gameplay_SwitchA;
    private readonly InputAction m_Gameplay_SwitchB;
    private readonly InputAction m_Gameplay_SwitchX;
    private readonly InputAction m_Gameplay_SwitchY;
    private readonly InputAction m_Gameplay_LeftStick;
    private readonly InputAction m_Gameplay_RightStick;
    public struct GameplayActions
    {
        private @SwitchControls m_Wrapper;
        public GameplayActions(@SwitchControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @DpadUp => m_Wrapper.m_Gameplay_DpadUp;
        public InputAction @DpadDown => m_Wrapper.m_Gameplay_DpadDown;
        public InputAction @DpadRight => m_Wrapper.m_Gameplay_DpadRight;
        public InputAction @DpadLeft => m_Wrapper.m_Gameplay_DpadLeft;
        public InputAction @SwitchA => m_Wrapper.m_Gameplay_SwitchA;
        public InputAction @SwitchB => m_Wrapper.m_Gameplay_SwitchB;
        public InputAction @SwitchX => m_Wrapper.m_Gameplay_SwitchX;
        public InputAction @SwitchY => m_Wrapper.m_Gameplay_SwitchY;
        public InputAction @LeftStick => m_Wrapper.m_Gameplay_LeftStick;
        public InputAction @RightStick => m_Wrapper.m_Gameplay_RightStick;
        public InputActionMap Get() { return m_Wrapper.m_Gameplay; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(GameplayActions set) { return set.Get(); }
        public void AddCallbacks(IGameplayActions instance)
        {
            if (instance == null || m_Wrapper.m_GameplayActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_GameplayActionsCallbackInterfaces.Add(instance);
            @DpadUp.started += instance.OnDpadUp;
            @DpadUp.performed += instance.OnDpadUp;
            @DpadUp.canceled += instance.OnDpadUp;
            @DpadDown.started += instance.OnDpadDown;
            @DpadDown.performed += instance.OnDpadDown;
            @DpadDown.canceled += instance.OnDpadDown;
            @DpadRight.started += instance.OnDpadRight;
            @DpadRight.performed += instance.OnDpadRight;
            @DpadRight.canceled += instance.OnDpadRight;
            @DpadLeft.started += instance.OnDpadLeft;
            @DpadLeft.performed += instance.OnDpadLeft;
            @DpadLeft.canceled += instance.OnDpadLeft;
            @SwitchA.started += instance.OnSwitchA;
            @SwitchA.performed += instance.OnSwitchA;
            @SwitchA.canceled += instance.OnSwitchA;
            @SwitchB.started += instance.OnSwitchB;
            @SwitchB.performed += instance.OnSwitchB;
            @SwitchB.canceled += instance.OnSwitchB;
            @SwitchX.started += instance.OnSwitchX;
            @SwitchX.performed += instance.OnSwitchX;
            @SwitchX.canceled += instance.OnSwitchX;
            @SwitchY.started += instance.OnSwitchY;
            @SwitchY.performed += instance.OnSwitchY;
            @SwitchY.canceled += instance.OnSwitchY;
            @LeftStick.started += instance.OnLeftStick;
            @LeftStick.performed += instance.OnLeftStick;
            @LeftStick.canceled += instance.OnLeftStick;
            @RightStick.started += instance.OnRightStick;
            @RightStick.performed += instance.OnRightStick;
            @RightStick.canceled += instance.OnRightStick;
        }

        private void UnregisterCallbacks(IGameplayActions instance)
        {
            @DpadUp.started -= instance.OnDpadUp;
            @DpadUp.performed -= instance.OnDpadUp;
            @DpadUp.canceled -= instance.OnDpadUp;
            @DpadDown.started -= instance.OnDpadDown;
            @DpadDown.performed -= instance.OnDpadDown;
            @DpadDown.canceled -= instance.OnDpadDown;
            @DpadRight.started -= instance.OnDpadRight;
            @DpadRight.performed -= instance.OnDpadRight;
            @DpadRight.canceled -= instance.OnDpadRight;
            @DpadLeft.started -= instance.OnDpadLeft;
            @DpadLeft.performed -= instance.OnDpadLeft;
            @DpadLeft.canceled -= instance.OnDpadLeft;
            @SwitchA.started -= instance.OnSwitchA;
            @SwitchA.performed -= instance.OnSwitchA;
            @SwitchA.canceled -= instance.OnSwitchA;
            @SwitchB.started -= instance.OnSwitchB;
            @SwitchB.performed -= instance.OnSwitchB;
            @SwitchB.canceled -= instance.OnSwitchB;
            @SwitchX.started -= instance.OnSwitchX;
            @SwitchX.performed -= instance.OnSwitchX;
            @SwitchX.canceled -= instance.OnSwitchX;
            @SwitchY.started -= instance.OnSwitchY;
            @SwitchY.performed -= instance.OnSwitchY;
            @SwitchY.canceled -= instance.OnSwitchY;
            @LeftStick.started -= instance.OnLeftStick;
            @LeftStick.performed -= instance.OnLeftStick;
            @LeftStick.canceled -= instance.OnLeftStick;
            @RightStick.started -= instance.OnRightStick;
            @RightStick.performed -= instance.OnRightStick;
            @RightStick.canceled -= instance.OnRightStick;
        }

        public void RemoveCallbacks(IGameplayActions instance)
        {
            if (m_Wrapper.m_GameplayActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IGameplayActions instance)
        {
            foreach (var item in m_Wrapper.m_GameplayActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_GameplayActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public GameplayActions @Gameplay => new GameplayActions(this);
    public interface IGameplayActions
    {
        void OnDpadUp(InputAction.CallbackContext context);
        void OnDpadDown(InputAction.CallbackContext context);
        void OnDpadRight(InputAction.CallbackContext context);
        void OnDpadLeft(InputAction.CallbackContext context);
        void OnSwitchA(InputAction.CallbackContext context);
        void OnSwitchB(InputAction.CallbackContext context);
        void OnSwitchX(InputAction.CallbackContext context);
        void OnSwitchY(InputAction.CallbackContext context);
        void OnLeftStick(InputAction.CallbackContext context);
        void OnRightStick(InputAction.CallbackContext context);
    }
}
