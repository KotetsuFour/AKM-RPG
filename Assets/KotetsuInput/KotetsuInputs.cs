//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.14.2
//     from Assets/KotetsuInput/KotetsuInputs.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

/// <summary>
/// Provides programmatic access to <see cref="InputActionAsset" />, <see cref="InputActionMap" />, <see cref="InputAction" /> and <see cref="InputControlScheme" /> instances defined in asset "Assets/KotetsuInput/KotetsuInputs.inputactions".
/// </summary>
/// <remarks>
/// This class is source generated and any manual edits will be discarded if the associated asset is reimported or modified.
/// </remarks>
/// <example>
/// <code>
/// using namespace UnityEngine;
/// using UnityEngine.InputSystem;
///
/// // Example of using an InputActionMap named "Player" from a UnityEngine.MonoBehaviour implementing callback interface.
/// public class Example : MonoBehaviour, MyActions.IPlayerActions
/// {
///     private MyActions_Actions m_Actions;                  // Source code representation of asset.
///     private MyActions_Actions.PlayerActions m_Player;     // Source code representation of action map.
///
///     void Awake()
///     {
///         m_Actions = new MyActions_Actions();              // Create asset object.
///         m_Player = m_Actions.Player;                      // Extract action map object.
///         m_Player.AddCallbacks(this);                      // Register callback interface IPlayerActions.
///     }
///
///     void OnDestroy()
///     {
///         m_Actions.Dispose();                              // Destroy asset object.
///     }
///
///     void OnEnable()
///     {
///         m_Player.Enable();                                // Enable all actions within map.
///     }
///
///     void OnDisable()
///     {
///         m_Player.Disable();                               // Disable all actions within map.
///     }
///
///     #region Interface implementation of MyActions.IPlayerActions
///
///     // Invoked when "Move" action is either started, performed or canceled.
///     public void OnMove(InputAction.CallbackContext context)
///     {
///         Debug.Log($"OnMove: {context.ReadValue&lt;Vector2&gt;()}");
///     }
///
///     // Invoked when "Attack" action is either started, performed or canceled.
///     public void OnAttack(InputAction.CallbackContext context)
///     {
///         Debug.Log($"OnAttack: {context.ReadValue&lt;float&gt;()}");
///     }
///
///     #endregion
/// }
/// </code>
/// </example>
public partial class @KotetsuInputs: IInputActionCollection2, IDisposable
{
    /// <summary>
    /// Provides access to the underlying asset instance.
    /// </summary>
    public InputActionAsset asset { get; }

    /// <summary>
    /// Constructs a new instance.
    /// </summary>
    public @KotetsuInputs()
    {
        asset = InputActionAsset.FromJson(@"{
    ""version"": 1,
    ""name"": ""KotetsuInputs"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""664ac99f-8f55-4de7-80cf-5ad418c722b6"",
            ""actions"": [
                {
                    ""name"": ""AButton"",
                    ""type"": ""Button"",
                    ""id"": ""60bd1347-2839-4607-8abd-f590ea67c238"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""BButton"",
                    ""type"": ""Button"",
                    ""id"": ""76289972-e1eb-4ac2-8be5-3a94a236bc39"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""XButton"",
                    ""type"": ""Button"",
                    ""id"": ""7eac08b4-1d35-4135-85b6-aad4569648c5"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""YButton"",
                    ""type"": ""Button"",
                    ""id"": ""76ada851-b027-4726-aaa7-cdf2c87234cf"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""UPButton"",
                    ""type"": ""Button"",
                    ""id"": ""7968fde4-1f6b-4b9a-acc5-88dc9181a695"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""DOWNButton"",
                    ""type"": ""Button"",
                    ""id"": ""2300e057-b489-4205-a737-34971a8bcca3"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RIGHTButton"",
                    ""type"": ""Button"",
                    ""id"": ""0491591d-543f-4f64-9ec3-09fa0c7795e0"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LEFTButton"",
                    ""type"": ""Button"",
                    ""id"": ""355dbd83-6bfa-4e26-9bba-3b5dbff20715"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""R1Button"",
                    ""type"": ""Button"",
                    ""id"": ""ffabf71d-20ae-450c-98bc-df3995b7b467"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""R2Button"",
                    ""type"": ""Button"",
                    ""id"": ""0979f40a-184d-4542-b2ca-265c4a907d37"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""L1Button"",
                    ""type"": ""Button"",
                    ""id"": ""c4b1ccb9-d0fc-47e8-92f5-c79a25c95294"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""L2Button"",
                    ""type"": ""Button"",
                    ""id"": ""c09c2089-a2ee-4f86-b8c5-9e0e60f2356d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""HOME"",
                    ""type"": ""Button"",
                    ""id"": ""8f8d574a-9893-499e-9805-f06d101c1b6a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PLUS"",
                    ""type"": ""Button"",
                    ""id"": ""5e3d6f95-6795-487c-9742-7b1f5987848a"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MINUS"",
                    ""type"": ""Button"",
                    ""id"": ""56a83cf8-6b4c-4773-bbc1-a86a3299f139"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CAPTURE"",
                    ""type"": ""Button"",
                    ""id"": ""06567987-5846-4c2a-9567-6dde975932a5"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RStickPress"",
                    ""type"": ""Button"",
                    ""id"": ""7f0a795e-1be3-4ef7-9c97-604ff09b1810"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RStick"",
                    ""type"": ""Value"",
                    ""id"": ""baab91a8-b656-4a7c-9143-37c8a2670721"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""LStick"",
                    ""type"": ""Value"",
                    ""id"": ""05bb273b-8a32-42c3-bbfa-1d632d36be3b"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""LStickPress"",
                    ""type"": ""Button"",
                    ""id"": ""35f55dc1-d37e-4a3e-96f0-1778b379f078"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MouseLeft"",
                    ""type"": ""Button"",
                    ""id"": ""279b6dd5-8749-41c7-a85d-4599aab1ecec"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MouseRight"",
                    ""type"": ""Button"",
                    ""id"": ""88577934-7f96-404c-bce3-4e16b66d2c2b"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MouseWheelPress"",
                    ""type"": ""Button"",
                    ""id"": ""2b273141-ac09-4a0b-95d4-7e2b690c560e"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MouseScroll"",
                    ""type"": ""Button"",
                    ""id"": ""2596636e-5fc4-45ec-8853-a4b529b38b2d"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""a078ead5-69bf-46fa-a6f2-f96f94f552b9"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";PlayStation"",
                    ""action"": ""BButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c2105deb-f303-42ac-bd44-b0620370228a"",
                    ""path"": ""<HID::Nintendo Wireless Gamepad>/trigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""NSW;NSWPlayer2;NSWPlayer3;NSWPlayer4;NSWPlayer1;NSWPlayer5;NSWPlayer6;NSWPlayer7;NSWPlayer8"",
                    ""action"": ""BButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2d29fd0b-7ba7-4d51-8ec8-de938a035d45"",
                    ""path"": ""<SwitchProControllerHID>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Switch"",
                    ""action"": ""BButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d18b98bc-9d32-4a7a-b712-0e735975fd3e"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";PlayStation"",
                    ""action"": ""XButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a204bd18-e9d1-4f22-b072-84e01daa6564"",
                    ""path"": ""<HID::Nintendo Wireless Gamepad>/button4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""NSW;NSWPlayer2;NSWPlayer3;NSWPlayer4;NSWPlayer1;NSWPlayer5;NSWPlayer6;NSWPlayer7;NSWPlayer8;NSWGamepad"",
                    ""action"": ""XButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3b8ba829-a15b-4a16-bcd2-89a6a7bb7a7e"",
                    ""path"": ""<SwitchProControllerHID>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Switch"",
                    ""action"": ""XButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3d53506d-24f9-4bff-ba1f-1b8b42ebe518"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";PlayStation"",
                    ""action"": ""YButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e4c11775-c336-413b-86c6-eb23875d01bd"",
                    ""path"": ""<HID::Nintendo Wireless Gamepad>/button3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""NSW;NSWPlayer2;NSWPlayer3;NSWPlayer4;NSWPlayer1;NSWPlayer5;NSWPlayer6;NSWPlayer7;NSWPlayer8"",
                    ""action"": ""YButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""33fc92ba-cf65-460e-bccd-efc0db8ed092"",
                    ""path"": ""<SwitchProControllerHID>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Switch"",
                    ""action"": ""YButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f78b3eda-4f59-4928-a8b7-d54bbadfe462"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";PlayStation"",
                    ""action"": ""UPButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fc2319ad-62ed-46b3-8234-8f1a84921ba8"",
                    ""path"": ""<HID::Nintendo Wireless Gamepad>/hat/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""NSW;NSWPlayer2;NSWPlayer3;NSWPlayer4;NSWPlayer1;NSWPlayer5;NSWPlayer6;NSWPlayer7;NSWPlayer8"",
                    ""action"": ""UPButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""352e2132-a604-4d05-a876-8d6c8ce82d48"",
                    ""path"": ""<SwitchProControllerHID>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Switch"",
                    ""action"": ""UPButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""202e32c6-16a9-4100-82ab-f0307084b19d"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";PlayStation"",
                    ""action"": ""DOWNButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""97a8bf5d-9726-4092-a5e0-9443dbdec29f"",
                    ""path"": ""<HID::Nintendo Wireless Gamepad>/hat/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""NSW"",
                    ""action"": ""DOWNButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9d0a9e89-fd55-45f1-be07-b3b52a8c5090"",
                    ""path"": ""<SwitchProControllerHID>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Switch"",
                    ""action"": ""DOWNButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""065d44e1-4767-4d94-890e-c15c61e2ab0e"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";PlayStation"",
                    ""action"": ""RIGHTButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d54622d6-5c75-41be-beca-c3c1e5e96566"",
                    ""path"": ""<HID::Nintendo Wireless Gamepad>/hat/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""NSW"",
                    ""action"": ""RIGHTButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""47eb5b92-e223-49dc-b3f5-12d0d8ccd532"",
                    ""path"": ""<SwitchProControllerHID>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Switch"",
                    ""action"": ""RIGHTButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""395bf41f-3f94-4027-95a6-89c43f244c9d"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";PlayStation"",
                    ""action"": ""LEFTButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3509e25a-d3be-4636-95ae-9513d49759db"",
                    ""path"": ""<HID::Nintendo Wireless Gamepad>/hat/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""NSW"",
                    ""action"": ""LEFTButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4288217a-da84-430d-9819-3b4403551ff3"",
                    ""path"": ""<SwitchProControllerHID>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Switch"",
                    ""action"": ""LEFTButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""be9856fd-aa70-43f2-b0ed-f53ec3c902d6"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";PlayStation"",
                    ""action"": ""R1Button"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7a4effe6-ba6a-4772-8283-472a71d91012"",
                    ""path"": ""<HID::Nintendo Wireless Gamepad>/button6"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""NSW"",
                    ""action"": ""R1Button"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fbe5ff42-af71-4faa-9745-5e922229a7d2"",
                    ""path"": ""<SwitchProControllerHID>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Switch"",
                    ""action"": ""R1Button"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bce5fdca-deb4-4e8b-b158-4d4fd2def203"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";PlayStation"",
                    ""action"": ""R2Button"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bbf3bfc1-39bc-409f-9427-1b24ec966249"",
                    ""path"": ""<HID::Nintendo Wireless Gamepad>/button8"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""NSW"",
                    ""action"": ""R2Button"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f3baf47d-c39e-418e-ba7a-bb59d781ba85"",
                    ""path"": ""<SwitchProControllerHID>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Switch"",
                    ""action"": ""R2Button"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a0ddb40e-f976-400b-b8c7-e9200c4f2db7"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";PlayStation"",
                    ""action"": ""L1Button"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""10ef4496-98b5-4960-bc96-7e99676e67ba"",
                    ""path"": ""<HID::Nintendo Wireless Gamepad>/button5"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""NSW"",
                    ""action"": ""L1Button"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""74e147f1-85e0-4989-953a-6b9f1c740c84"",
                    ""path"": ""<SwitchProControllerHID>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Switch"",
                    ""action"": ""L1Button"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""55512525-d0e0-4c9c-93bf-00151f9c3d5b"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";PlayStation"",
                    ""action"": ""L2Button"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4537cf45-13ac-4dee-91a5-284e7be39be9"",
                    ""path"": ""<HID::Nintendo Wireless Gamepad>/button7"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""NSW"",
                    ""action"": ""L2Button"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""437d49ab-504c-4371-a9e2-b8bd2a9628e5"",
                    ""path"": ""<SwitchProControllerHID>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Switch"",
                    ""action"": ""L2Button"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a1009290-c224-4a0d-8666-0da3ee988b33"",
                    ""path"": ""<HID::Nintendo Wireless Gamepad>/button13"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""NSW"",
                    ""action"": ""HOME"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d0361622-04ca-4969-8926-140342664a6c"",
                    ""path"": ""<SwitchProControllerHID>/home"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Switch"",
                    ""action"": ""HOME"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""540122ef-530b-43f0-9835-c3dba1197cfd"",
                    ""path"": ""<HID::Nintendo Wireless Gamepad>/button9"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""NSW"",
                    ""action"": ""MINUS"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""572e280b-6bb3-411f-8ba8-96577a0c4af8"",
                    ""path"": ""<SwitchProControllerHID>/select"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Switch"",
                    ""action"": ""MINUS"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""82e2c26e-ecf4-48d5-b7f8-888fd3e5c825"",
                    ""path"": ""<Keyboard>/backspace"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";PC"",
                    ""action"": ""MINUS"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""73ce30f0-93a5-4f6c-9ed9-b108824a2fe1"",
                    ""path"": ""<HID::Nintendo Wireless Gamepad>/button14"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""NSW"",
                    ""action"": ""CAPTURE"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""16af2ba1-24c0-471d-b7fd-b147a967bc8e"",
                    ""path"": ""<SwitchProControllerHID>/capture"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Switch"",
                    ""action"": ""CAPTURE"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""036f1dfd-68cb-470c-83a7-bfa5c736e5a7"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";PlayStation"",
                    ""action"": ""RStickPress"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6c63b945-e527-4c2a-b056-900c5e917353"",
                    ""path"": ""<HID::Nintendo Wireless Gamepad>/button12"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""NSW"",
                    ""action"": ""RStickPress"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""440cecbb-6d38-4521-a914-f58979fb087b"",
                    ""path"": ""<SwitchProControllerHID>/rightStickPress"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Switch"",
                    ""action"": ""RStickPress"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4ad2bb75-df8f-4fcc-a4bf-7f96aec84a3b"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";PlayStation"",
                    ""action"": ""LStickPress"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""77c657aa-36a2-41b8-9595-97aa94087dd4"",
                    ""path"": ""<HID::Nintendo Wireless Gamepad>/trigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""NSW"",
                    ""action"": ""LStickPress"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cc800673-4070-4102-8f0e-2f8fb76bef76"",
                    ""path"": ""<SwitchProControllerHID>/leftStickPress"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Switch"",
                    ""action"": ""LStickPress"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b957313d-d294-4967-939a-f99567d88a27"",
                    ""path"": ""<HID::Nintendo Wireless Gamepad>/button2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";NSW;NSWPlayer2;NSWPlayer3;NSWPlayer4;NSWPlayer1;NSWPlayer5;NSWPlayer6;NSWPlayer7;NSWPlayer8"",
                    ""action"": ""AButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a1cc1ac5-4e9d-4cdc-9a71-82926d45edce"",
                    ""path"": ""<SwitchProControllerHID>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Switch"",
                    ""action"": ""AButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""21551c21-cca5-4713-86e5-cd34f3b6d02e"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";PlayStation"",
                    ""action"": ""AButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a120d566-e4dd-4e8c-9b8c-f46cb6c2fadc"",
                    ""path"": ""<HID::Nintendo Wireless Gamepad>/button10"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";NSW"",
                    ""action"": ""PLUS"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e6254390-d3c7-4e64-828f-b511e417a020"",
                    ""path"": ""<SwitchProControllerHID>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Switch"",
                    ""action"": ""PLUS"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ad0408a9-964e-4eeb-9fa8-84e8834b7c9b"",
                    ""path"": ""<Keyboard>/equals"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";PC"",
                    ""action"": ""PLUS"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""0e23788e-6906-45ca-9fb5-9786c0c8924e"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RStick"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""a77068d8-6780-4cd5-bd7f-c6cec8ad2acf"",
                    ""path"": ""<SwitchProControllerHID>/rightStick/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Switch"",
                    ""action"": ""RStick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""70d7e5bc-3f3f-4109-873b-f0bbd02df41a"",
                    ""path"": ""<SwitchProControllerHID>/rightStick/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Switch"",
                    ""action"": ""RStick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""d061701f-a7b9-4a64-9e2b-555227165dc0"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RStick"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""750ba52e-a75b-4c8e-9e12-5d5f8dc927ea"",
                    ""path"": ""<HID::Nintendo Wireless Gamepad>/ry"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";NSW"",
                    ""action"": ""RStick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""04386972-62f9-4033-9f2f-2a9dd6214388"",
                    ""path"": ""<HID::Nintendo Wireless Gamepad>/rx"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";NSW"",
                    ""action"": ""RStick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""c5a74df4-89a4-439b-b0b7-4566d7ee8765"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RStick"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""40bc6bd9-592c-4361-abbf-95d7ab327665"",
                    ""path"": ""<Mouse>/delta/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";PC"",
                    ""action"": ""RStick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""a2972f0a-1a30-4517-863b-a9320c45877f"",
                    ""path"": ""<Mouse>/delta/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";PC"",
                    ""action"": ""RStick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""721f425b-5e79-42a7-8a16-0a245526233f"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LStick"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""0f84ec97-3987-4471-ba62-cd2cef6ac41f"",
                    ""path"": ""<SwitchProControllerHID>/leftStick/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Switch"",
                    ""action"": ""LStick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""461e8fde-68d3-4f1a-9e4d-cbf5a74c4e16"",
                    ""path"": ""<SwitchProControllerHID>/leftStick/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Switch"",
                    ""action"": ""LStick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""fd8826dc-7640-463b-bc51-90a7dd566143"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LStick"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""dcb343d3-397b-4dcd-aef9-ff90596c345d"",
                    ""path"": ""<Joystick>/stick/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";NSW"",
                    ""action"": ""LStick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""2f5aed4a-b02a-46da-9af1-f04bca73cef7"",
                    ""path"": ""<Joystick>/stick/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";NSW"",
                    ""action"": ""LStick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""64a6c56b-2aac-4689-9570-3a37eefdd8be"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LStick"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""d6bfd3d3-b261-409f-bd02-02cec170b633"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";PC"",
                    ""action"": ""LStick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""d2fc19fb-f326-40b3-b3a5-84a93c757afa"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";PC"",
                    ""action"": ""LStick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""c15e7a7b-440b-4ef7-9edf-785759fc4900"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";PC"",
                    ""action"": ""LStick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""4fda8abe-5b10-461b-be43-c3c575320831"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";PC"",
                    ""action"": ""LStick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""03643316-293e-4af8-b902-12e229b7b54c"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";PC"",
                    ""action"": ""MouseLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cee2e144-1de4-4784-a758-4154abbc41c3"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";PC"",
                    ""action"": ""MouseRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""47ca061c-505e-49c0-a320-741443a9861b"",
                    ""path"": ""<Mouse>/middleButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";PC"",
                    ""action"": ""MouseWheelPress"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""63c652e3-fab3-4123-9137-0c34719c65b2"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MouseScroll"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""44dae005-8da4-45fe-bfd3-161d0f13313e"",
                    ""path"": ""<Mouse>/scroll/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";PC"",
                    ""action"": ""MouseScroll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""5f79e6a2-a960-4e80-8cb8-a7673e8daebb"",
                    ""path"": ""<Mouse>/scroll/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";PC"",
                    ""action"": ""MouseScroll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""NSW"",
            ""bindingGroup"": ""NSW"",
            ""devices"": [
                {
                    ""devicePath"": ""<Joystick>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Switch"",
            ""bindingGroup"": ""Switch"",
            ""devices"": [
                {
                    ""devicePath"": ""<SwitchProControllerHID>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""NSWPlayer2"",
            ""bindingGroup"": ""NSWPlayer2"",
            ""devices"": [
                {
                    ""devicePath"": ""<Gamepad>"",
                    ""isOptional"": true,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""NSWPlayer3"",
            ""bindingGroup"": ""NSWPlayer3"",
            ""devices"": [
                {
                    ""devicePath"": ""<Gamepad>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""NSWPlayer4"",
            ""bindingGroup"": ""NSWPlayer4"",
            ""devices"": []
        },
        {
            ""name"": ""NSWPlayer1"",
            ""bindingGroup"": ""NSWPlayer1"",
            ""devices"": [
                {
                    ""devicePath"": ""<Gamepad>"",
                    ""isOptional"": true,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""NSWPlayer5"",
            ""bindingGroup"": ""NSWPlayer5"",
            ""devices"": [
                {
                    ""devicePath"": ""<Gamepad>"",
                    ""isOptional"": true,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""NSWPlayer6"",
            ""bindingGroup"": ""NSWPlayer6"",
            ""devices"": [
                {
                    ""devicePath"": ""<Gamepad>"",
                    ""isOptional"": true,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""NSWPlayer7"",
            ""bindingGroup"": ""NSWPlayer7"",
            ""devices"": [
                {
                    ""devicePath"": ""<Gamepad>"",
                    ""isOptional"": true,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""NSWPlayer8"",
            ""bindingGroup"": ""NSWPlayer8"",
            ""devices"": [
                {
                    ""devicePath"": ""<Gamepad>"",
                    ""isOptional"": true,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""NSWGamepad"",
            ""bindingGroup"": ""NSWGamepad"",
            ""devices"": [
                {
                    ""devicePath"": ""<Gamepad>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""PlayStation"",
            ""bindingGroup"": ""PlayStation"",
            ""devices"": [
                {
                    ""devicePath"": ""<DualShockGamepad>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""PC"",
            ""bindingGroup"": ""PC"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Xbox"",
            ""bindingGroup"": ""Xbox"",
            ""devices"": [
                {
                    ""devicePath"": ""<XInputController>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_AButton = m_Player.FindAction("AButton", throwIfNotFound: true);
        m_Player_BButton = m_Player.FindAction("BButton", throwIfNotFound: true);
        m_Player_XButton = m_Player.FindAction("XButton", throwIfNotFound: true);
        m_Player_YButton = m_Player.FindAction("YButton", throwIfNotFound: true);
        m_Player_UPButton = m_Player.FindAction("UPButton", throwIfNotFound: true);
        m_Player_DOWNButton = m_Player.FindAction("DOWNButton", throwIfNotFound: true);
        m_Player_RIGHTButton = m_Player.FindAction("RIGHTButton", throwIfNotFound: true);
        m_Player_LEFTButton = m_Player.FindAction("LEFTButton", throwIfNotFound: true);
        m_Player_R1Button = m_Player.FindAction("R1Button", throwIfNotFound: true);
        m_Player_R2Button = m_Player.FindAction("R2Button", throwIfNotFound: true);
        m_Player_L1Button = m_Player.FindAction("L1Button", throwIfNotFound: true);
        m_Player_L2Button = m_Player.FindAction("L2Button", throwIfNotFound: true);
        m_Player_HOME = m_Player.FindAction("HOME", throwIfNotFound: true);
        m_Player_PLUS = m_Player.FindAction("PLUS", throwIfNotFound: true);
        m_Player_MINUS = m_Player.FindAction("MINUS", throwIfNotFound: true);
        m_Player_CAPTURE = m_Player.FindAction("CAPTURE", throwIfNotFound: true);
        m_Player_RStickPress = m_Player.FindAction("RStickPress", throwIfNotFound: true);
        m_Player_RStick = m_Player.FindAction("RStick", throwIfNotFound: true);
        m_Player_LStick = m_Player.FindAction("LStick", throwIfNotFound: true);
        m_Player_LStickPress = m_Player.FindAction("LStickPress", throwIfNotFound: true);
        m_Player_MouseLeft = m_Player.FindAction("MouseLeft", throwIfNotFound: true);
        m_Player_MouseRight = m_Player.FindAction("MouseRight", throwIfNotFound: true);
        m_Player_MouseWheelPress = m_Player.FindAction("MouseWheelPress", throwIfNotFound: true);
        m_Player_MouseScroll = m_Player.FindAction("MouseScroll", throwIfNotFound: true);
    }

    ~@KotetsuInputs()
    {
        UnityEngine.Debug.Assert(!m_Player.enabled, "This will cause a leak and performance issues, KotetsuInputs.Player.Disable() has not been called.");
    }

    /// <summary>
    /// Destroys this asset and all associated <see cref="InputAction"/> instances.
    /// </summary>
    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.bindingMask" />
    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.devices" />
    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.controlSchemes" />
    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.Contains(InputAction)" />
    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.GetEnumerator()" />
    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    /// <inheritdoc cref="IEnumerable.GetEnumerator()" />
    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.Enable()" />
    public void Enable()
    {
        asset.Enable();
    }

    /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.Disable()" />
    public void Disable()
    {
        asset.Disable();
    }

    /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.bindings" />
    public IEnumerable<InputBinding> bindings => asset.bindings;

    /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.FindAction(string, bool)" />
    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.FindBinding(InputBinding, out InputAction)" />
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player
    private readonly InputActionMap m_Player;
    private List<IPlayerActions> m_PlayerActionsCallbackInterfaces = new List<IPlayerActions>();
    private readonly InputAction m_Player_AButton;
    private readonly InputAction m_Player_BButton;
    private readonly InputAction m_Player_XButton;
    private readonly InputAction m_Player_YButton;
    private readonly InputAction m_Player_UPButton;
    private readonly InputAction m_Player_DOWNButton;
    private readonly InputAction m_Player_RIGHTButton;
    private readonly InputAction m_Player_LEFTButton;
    private readonly InputAction m_Player_R1Button;
    private readonly InputAction m_Player_R2Button;
    private readonly InputAction m_Player_L1Button;
    private readonly InputAction m_Player_L2Button;
    private readonly InputAction m_Player_HOME;
    private readonly InputAction m_Player_PLUS;
    private readonly InputAction m_Player_MINUS;
    private readonly InputAction m_Player_CAPTURE;
    private readonly InputAction m_Player_RStickPress;
    private readonly InputAction m_Player_RStick;
    private readonly InputAction m_Player_LStick;
    private readonly InputAction m_Player_LStickPress;
    private readonly InputAction m_Player_MouseLeft;
    private readonly InputAction m_Player_MouseRight;
    private readonly InputAction m_Player_MouseWheelPress;
    private readonly InputAction m_Player_MouseScroll;
    /// <summary>
    /// Provides access to input actions defined in input action map "Player".
    /// </summary>
    public struct PlayerActions
    {
        private @KotetsuInputs m_Wrapper;

        /// <summary>
        /// Construct a new instance of the input action map wrapper class.
        /// </summary>
        public PlayerActions(@KotetsuInputs wrapper) { m_Wrapper = wrapper; }
        /// <summary>
        /// Provides access to the underlying input action "Player/AButton".
        /// </summary>
        public InputAction @AButton => m_Wrapper.m_Player_AButton;
        /// <summary>
        /// Provides access to the underlying input action "Player/BButton".
        /// </summary>
        public InputAction @BButton => m_Wrapper.m_Player_BButton;
        /// <summary>
        /// Provides access to the underlying input action "Player/XButton".
        /// </summary>
        public InputAction @XButton => m_Wrapper.m_Player_XButton;
        /// <summary>
        /// Provides access to the underlying input action "Player/YButton".
        /// </summary>
        public InputAction @YButton => m_Wrapper.m_Player_YButton;
        /// <summary>
        /// Provides access to the underlying input action "Player/UPButton".
        /// </summary>
        public InputAction @UPButton => m_Wrapper.m_Player_UPButton;
        /// <summary>
        /// Provides access to the underlying input action "Player/DOWNButton".
        /// </summary>
        public InputAction @DOWNButton => m_Wrapper.m_Player_DOWNButton;
        /// <summary>
        /// Provides access to the underlying input action "Player/RIGHTButton".
        /// </summary>
        public InputAction @RIGHTButton => m_Wrapper.m_Player_RIGHTButton;
        /// <summary>
        /// Provides access to the underlying input action "Player/LEFTButton".
        /// </summary>
        public InputAction @LEFTButton => m_Wrapper.m_Player_LEFTButton;
        /// <summary>
        /// Provides access to the underlying input action "Player/R1Button".
        /// </summary>
        public InputAction @R1Button => m_Wrapper.m_Player_R1Button;
        /// <summary>
        /// Provides access to the underlying input action "Player/R2Button".
        /// </summary>
        public InputAction @R2Button => m_Wrapper.m_Player_R2Button;
        /// <summary>
        /// Provides access to the underlying input action "Player/L1Button".
        /// </summary>
        public InputAction @L1Button => m_Wrapper.m_Player_L1Button;
        /// <summary>
        /// Provides access to the underlying input action "Player/L2Button".
        /// </summary>
        public InputAction @L2Button => m_Wrapper.m_Player_L2Button;
        /// <summary>
        /// Provides access to the underlying input action "Player/HOME".
        /// </summary>
        public InputAction @HOME => m_Wrapper.m_Player_HOME;
        /// <summary>
        /// Provides access to the underlying input action "Player/PLUS".
        /// </summary>
        public InputAction @PLUS => m_Wrapper.m_Player_PLUS;
        /// <summary>
        /// Provides access to the underlying input action "Player/MINUS".
        /// </summary>
        public InputAction @MINUS => m_Wrapper.m_Player_MINUS;
        /// <summary>
        /// Provides access to the underlying input action "Player/CAPTURE".
        /// </summary>
        public InputAction @CAPTURE => m_Wrapper.m_Player_CAPTURE;
        /// <summary>
        /// Provides access to the underlying input action "Player/RStickPress".
        /// </summary>
        public InputAction @RStickPress => m_Wrapper.m_Player_RStickPress;
        /// <summary>
        /// Provides access to the underlying input action "Player/RStick".
        /// </summary>
        public InputAction @RStick => m_Wrapper.m_Player_RStick;
        /// <summary>
        /// Provides access to the underlying input action "Player/LStick".
        /// </summary>
        public InputAction @LStick => m_Wrapper.m_Player_LStick;
        /// <summary>
        /// Provides access to the underlying input action "Player/LStickPress".
        /// </summary>
        public InputAction @LStickPress => m_Wrapper.m_Player_LStickPress;
        /// <summary>
        /// Provides access to the underlying input action "Player/MouseLeft".
        /// </summary>
        public InputAction @MouseLeft => m_Wrapper.m_Player_MouseLeft;
        /// <summary>
        /// Provides access to the underlying input action "Player/MouseRight".
        /// </summary>
        public InputAction @MouseRight => m_Wrapper.m_Player_MouseRight;
        /// <summary>
        /// Provides access to the underlying input action "Player/MouseWheelPress".
        /// </summary>
        public InputAction @MouseWheelPress => m_Wrapper.m_Player_MouseWheelPress;
        /// <summary>
        /// Provides access to the underlying input action "Player/MouseScroll".
        /// </summary>
        public InputAction @MouseScroll => m_Wrapper.m_Player_MouseScroll;
        /// <summary>
        /// Provides access to the underlying input action map instance.
        /// </summary>
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        /// <inheritdoc cref="UnityEngine.InputSystem.InputActionMap.Enable()" />
        public void Enable() { Get().Enable(); }
        /// <inheritdoc cref="UnityEngine.InputSystem.InputActionMap.Disable()" />
        public void Disable() { Get().Disable(); }
        /// <inheritdoc cref="UnityEngine.InputSystem.InputActionMap.enabled" />
        public bool enabled => Get().enabled;
        /// <summary>
        /// Implicitly converts an <see ref="PlayerActions" /> to an <see ref="InputActionMap" /> instance.
        /// </summary>
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        /// <summary>
        /// Adds <see cref="InputAction.started"/>, <see cref="InputAction.performed"/> and <see cref="InputAction.canceled"/> callbacks provided via <param cref="instance" /> on all input actions contained in this map.
        /// </summary>
        /// <param name="instance">Callback instance.</param>
        /// <remarks>
        /// If <paramref name="instance" /> is <c>null</c> or <paramref name="instance"/> have already been added this method does nothing.
        /// </remarks>
        /// <seealso cref="PlayerActions" />
        public void AddCallbacks(IPlayerActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Add(instance);
            @AButton.started += instance.OnAButton;
            @AButton.performed += instance.OnAButton;
            @AButton.canceled += instance.OnAButton;
            @BButton.started += instance.OnBButton;
            @BButton.performed += instance.OnBButton;
            @BButton.canceled += instance.OnBButton;
            @XButton.started += instance.OnXButton;
            @XButton.performed += instance.OnXButton;
            @XButton.canceled += instance.OnXButton;
            @YButton.started += instance.OnYButton;
            @YButton.performed += instance.OnYButton;
            @YButton.canceled += instance.OnYButton;
            @UPButton.started += instance.OnUPButton;
            @UPButton.performed += instance.OnUPButton;
            @UPButton.canceled += instance.OnUPButton;
            @DOWNButton.started += instance.OnDOWNButton;
            @DOWNButton.performed += instance.OnDOWNButton;
            @DOWNButton.canceled += instance.OnDOWNButton;
            @RIGHTButton.started += instance.OnRIGHTButton;
            @RIGHTButton.performed += instance.OnRIGHTButton;
            @RIGHTButton.canceled += instance.OnRIGHTButton;
            @LEFTButton.started += instance.OnLEFTButton;
            @LEFTButton.performed += instance.OnLEFTButton;
            @LEFTButton.canceled += instance.OnLEFTButton;
            @R1Button.started += instance.OnR1Button;
            @R1Button.performed += instance.OnR1Button;
            @R1Button.canceled += instance.OnR1Button;
            @R2Button.started += instance.OnR2Button;
            @R2Button.performed += instance.OnR2Button;
            @R2Button.canceled += instance.OnR2Button;
            @L1Button.started += instance.OnL1Button;
            @L1Button.performed += instance.OnL1Button;
            @L1Button.canceled += instance.OnL1Button;
            @L2Button.started += instance.OnL2Button;
            @L2Button.performed += instance.OnL2Button;
            @L2Button.canceled += instance.OnL2Button;
            @HOME.started += instance.OnHOME;
            @HOME.performed += instance.OnHOME;
            @HOME.canceled += instance.OnHOME;
            @PLUS.started += instance.OnPLUS;
            @PLUS.performed += instance.OnPLUS;
            @PLUS.canceled += instance.OnPLUS;
            @MINUS.started += instance.OnMINUS;
            @MINUS.performed += instance.OnMINUS;
            @MINUS.canceled += instance.OnMINUS;
            @CAPTURE.started += instance.OnCAPTURE;
            @CAPTURE.performed += instance.OnCAPTURE;
            @CAPTURE.canceled += instance.OnCAPTURE;
            @RStickPress.started += instance.OnRStickPress;
            @RStickPress.performed += instance.OnRStickPress;
            @RStickPress.canceled += instance.OnRStickPress;
            @RStick.started += instance.OnRStick;
            @RStick.performed += instance.OnRStick;
            @RStick.canceled += instance.OnRStick;
            @LStick.started += instance.OnLStick;
            @LStick.performed += instance.OnLStick;
            @LStick.canceled += instance.OnLStick;
            @LStickPress.started += instance.OnLStickPress;
            @LStickPress.performed += instance.OnLStickPress;
            @LStickPress.canceled += instance.OnLStickPress;
            @MouseLeft.started += instance.OnMouseLeft;
            @MouseLeft.performed += instance.OnMouseLeft;
            @MouseLeft.canceled += instance.OnMouseLeft;
            @MouseRight.started += instance.OnMouseRight;
            @MouseRight.performed += instance.OnMouseRight;
            @MouseRight.canceled += instance.OnMouseRight;
            @MouseWheelPress.started += instance.OnMouseWheelPress;
            @MouseWheelPress.performed += instance.OnMouseWheelPress;
            @MouseWheelPress.canceled += instance.OnMouseWheelPress;
            @MouseScroll.started += instance.OnMouseScroll;
            @MouseScroll.performed += instance.OnMouseScroll;
            @MouseScroll.canceled += instance.OnMouseScroll;
        }

        /// <summary>
        /// Removes <see cref="InputAction.started"/>, <see cref="InputAction.performed"/> and <see cref="InputAction.canceled"/> callbacks provided via <param cref="instance" /> on all input actions contained in this map.
        /// </summary>
        /// <remarks>
        /// Calling this method when <paramref name="instance" /> have not previously been registered has no side-effects.
        /// </remarks>
        /// <seealso cref="PlayerActions" />
        private void UnregisterCallbacks(IPlayerActions instance)
        {
            @AButton.started -= instance.OnAButton;
            @AButton.performed -= instance.OnAButton;
            @AButton.canceled -= instance.OnAButton;
            @BButton.started -= instance.OnBButton;
            @BButton.performed -= instance.OnBButton;
            @BButton.canceled -= instance.OnBButton;
            @XButton.started -= instance.OnXButton;
            @XButton.performed -= instance.OnXButton;
            @XButton.canceled -= instance.OnXButton;
            @YButton.started -= instance.OnYButton;
            @YButton.performed -= instance.OnYButton;
            @YButton.canceled -= instance.OnYButton;
            @UPButton.started -= instance.OnUPButton;
            @UPButton.performed -= instance.OnUPButton;
            @UPButton.canceled -= instance.OnUPButton;
            @DOWNButton.started -= instance.OnDOWNButton;
            @DOWNButton.performed -= instance.OnDOWNButton;
            @DOWNButton.canceled -= instance.OnDOWNButton;
            @RIGHTButton.started -= instance.OnRIGHTButton;
            @RIGHTButton.performed -= instance.OnRIGHTButton;
            @RIGHTButton.canceled -= instance.OnRIGHTButton;
            @LEFTButton.started -= instance.OnLEFTButton;
            @LEFTButton.performed -= instance.OnLEFTButton;
            @LEFTButton.canceled -= instance.OnLEFTButton;
            @R1Button.started -= instance.OnR1Button;
            @R1Button.performed -= instance.OnR1Button;
            @R1Button.canceled -= instance.OnR1Button;
            @R2Button.started -= instance.OnR2Button;
            @R2Button.performed -= instance.OnR2Button;
            @R2Button.canceled -= instance.OnR2Button;
            @L1Button.started -= instance.OnL1Button;
            @L1Button.performed -= instance.OnL1Button;
            @L1Button.canceled -= instance.OnL1Button;
            @L2Button.started -= instance.OnL2Button;
            @L2Button.performed -= instance.OnL2Button;
            @L2Button.canceled -= instance.OnL2Button;
            @HOME.started -= instance.OnHOME;
            @HOME.performed -= instance.OnHOME;
            @HOME.canceled -= instance.OnHOME;
            @PLUS.started -= instance.OnPLUS;
            @PLUS.performed -= instance.OnPLUS;
            @PLUS.canceled -= instance.OnPLUS;
            @MINUS.started -= instance.OnMINUS;
            @MINUS.performed -= instance.OnMINUS;
            @MINUS.canceled -= instance.OnMINUS;
            @CAPTURE.started -= instance.OnCAPTURE;
            @CAPTURE.performed -= instance.OnCAPTURE;
            @CAPTURE.canceled -= instance.OnCAPTURE;
            @RStickPress.started -= instance.OnRStickPress;
            @RStickPress.performed -= instance.OnRStickPress;
            @RStickPress.canceled -= instance.OnRStickPress;
            @RStick.started -= instance.OnRStick;
            @RStick.performed -= instance.OnRStick;
            @RStick.canceled -= instance.OnRStick;
            @LStick.started -= instance.OnLStick;
            @LStick.performed -= instance.OnLStick;
            @LStick.canceled -= instance.OnLStick;
            @LStickPress.started -= instance.OnLStickPress;
            @LStickPress.performed -= instance.OnLStickPress;
            @LStickPress.canceled -= instance.OnLStickPress;
            @MouseLeft.started -= instance.OnMouseLeft;
            @MouseLeft.performed -= instance.OnMouseLeft;
            @MouseLeft.canceled -= instance.OnMouseLeft;
            @MouseRight.started -= instance.OnMouseRight;
            @MouseRight.performed -= instance.OnMouseRight;
            @MouseRight.canceled -= instance.OnMouseRight;
            @MouseWheelPress.started -= instance.OnMouseWheelPress;
            @MouseWheelPress.performed -= instance.OnMouseWheelPress;
            @MouseWheelPress.canceled -= instance.OnMouseWheelPress;
            @MouseScroll.started -= instance.OnMouseScroll;
            @MouseScroll.performed -= instance.OnMouseScroll;
            @MouseScroll.canceled -= instance.OnMouseScroll;
        }

        /// <summary>
        /// Unregisters <param cref="instance" /> and unregisters all input action callbacks via <see cref="PlayerActions.UnregisterCallbacks(IPlayerActions)" />.
        /// </summary>
        /// <seealso cref="PlayerActions.UnregisterCallbacks(IPlayerActions)" />
        public void RemoveCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        /// <summary>
        /// Replaces all existing callback instances and previously registered input action callbacks associated with them with callbacks provided via <param cref="instance" />.
        /// </summary>
        /// <remarks>
        /// If <paramref name="instance" /> is <c>null</c>, calling this method will only unregister all existing callbacks but not register any new callbacks.
        /// </remarks>
        /// <seealso cref="PlayerActions.AddCallbacks(IPlayerActions)" />
        /// <seealso cref="PlayerActions.RemoveCallbacks(IPlayerActions)" />
        /// <seealso cref="PlayerActions.UnregisterCallbacks(IPlayerActions)" />
        public void SetCallbacks(IPlayerActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    /// <summary>
    /// Provides a new <see cref="PlayerActions" /> instance referencing this action map.
    /// </summary>
    public PlayerActions @Player => new PlayerActions(this);
    private int m_NSWSchemeIndex = -1;
    /// <summary>
    /// Provides access to the input control scheme.
    /// </summary>
    /// <seealso cref="UnityEngine.InputSystem.InputControlScheme" />
    public InputControlScheme NSWScheme
    {
        get
        {
            if (m_NSWSchemeIndex == -1) m_NSWSchemeIndex = asset.FindControlSchemeIndex("NSW");
            return asset.controlSchemes[m_NSWSchemeIndex];
        }
    }
    private int m_SwitchSchemeIndex = -1;
    /// <summary>
    /// Provides access to the input control scheme.
    /// </summary>
    /// <seealso cref="UnityEngine.InputSystem.InputControlScheme" />
    public InputControlScheme SwitchScheme
    {
        get
        {
            if (m_SwitchSchemeIndex == -1) m_SwitchSchemeIndex = asset.FindControlSchemeIndex("Switch");
            return asset.controlSchemes[m_SwitchSchemeIndex];
        }
    }
    private int m_NSWPlayer2SchemeIndex = -1;
    /// <summary>
    /// Provides access to the input control scheme.
    /// </summary>
    /// <seealso cref="UnityEngine.InputSystem.InputControlScheme" />
    public InputControlScheme NSWPlayer2Scheme
    {
        get
        {
            if (m_NSWPlayer2SchemeIndex == -1) m_NSWPlayer2SchemeIndex = asset.FindControlSchemeIndex("NSWPlayer2");
            return asset.controlSchemes[m_NSWPlayer2SchemeIndex];
        }
    }
    private int m_NSWPlayer3SchemeIndex = -1;
    /// <summary>
    /// Provides access to the input control scheme.
    /// </summary>
    /// <seealso cref="UnityEngine.InputSystem.InputControlScheme" />
    public InputControlScheme NSWPlayer3Scheme
    {
        get
        {
            if (m_NSWPlayer3SchemeIndex == -1) m_NSWPlayer3SchemeIndex = asset.FindControlSchemeIndex("NSWPlayer3");
            return asset.controlSchemes[m_NSWPlayer3SchemeIndex];
        }
    }
    private int m_NSWPlayer4SchemeIndex = -1;
    /// <summary>
    /// Provides access to the input control scheme.
    /// </summary>
    /// <seealso cref="UnityEngine.InputSystem.InputControlScheme" />
    public InputControlScheme NSWPlayer4Scheme
    {
        get
        {
            if (m_NSWPlayer4SchemeIndex == -1) m_NSWPlayer4SchemeIndex = asset.FindControlSchemeIndex("NSWPlayer4");
            return asset.controlSchemes[m_NSWPlayer4SchemeIndex];
        }
    }
    private int m_NSWPlayer1SchemeIndex = -1;
    /// <summary>
    /// Provides access to the input control scheme.
    /// </summary>
    /// <seealso cref="UnityEngine.InputSystem.InputControlScheme" />
    public InputControlScheme NSWPlayer1Scheme
    {
        get
        {
            if (m_NSWPlayer1SchemeIndex == -1) m_NSWPlayer1SchemeIndex = asset.FindControlSchemeIndex("NSWPlayer1");
            return asset.controlSchemes[m_NSWPlayer1SchemeIndex];
        }
    }
    private int m_NSWPlayer5SchemeIndex = -1;
    /// <summary>
    /// Provides access to the input control scheme.
    /// </summary>
    /// <seealso cref="UnityEngine.InputSystem.InputControlScheme" />
    public InputControlScheme NSWPlayer5Scheme
    {
        get
        {
            if (m_NSWPlayer5SchemeIndex == -1) m_NSWPlayer5SchemeIndex = asset.FindControlSchemeIndex("NSWPlayer5");
            return asset.controlSchemes[m_NSWPlayer5SchemeIndex];
        }
    }
    private int m_NSWPlayer6SchemeIndex = -1;
    /// <summary>
    /// Provides access to the input control scheme.
    /// </summary>
    /// <seealso cref="UnityEngine.InputSystem.InputControlScheme" />
    public InputControlScheme NSWPlayer6Scheme
    {
        get
        {
            if (m_NSWPlayer6SchemeIndex == -1) m_NSWPlayer6SchemeIndex = asset.FindControlSchemeIndex("NSWPlayer6");
            return asset.controlSchemes[m_NSWPlayer6SchemeIndex];
        }
    }
    private int m_NSWPlayer7SchemeIndex = -1;
    /// <summary>
    /// Provides access to the input control scheme.
    /// </summary>
    /// <seealso cref="UnityEngine.InputSystem.InputControlScheme" />
    public InputControlScheme NSWPlayer7Scheme
    {
        get
        {
            if (m_NSWPlayer7SchemeIndex == -1) m_NSWPlayer7SchemeIndex = asset.FindControlSchemeIndex("NSWPlayer7");
            return asset.controlSchemes[m_NSWPlayer7SchemeIndex];
        }
    }
    private int m_NSWPlayer8SchemeIndex = -1;
    /// <summary>
    /// Provides access to the input control scheme.
    /// </summary>
    /// <seealso cref="UnityEngine.InputSystem.InputControlScheme" />
    public InputControlScheme NSWPlayer8Scheme
    {
        get
        {
            if (m_NSWPlayer8SchemeIndex == -1) m_NSWPlayer8SchemeIndex = asset.FindControlSchemeIndex("NSWPlayer8");
            return asset.controlSchemes[m_NSWPlayer8SchemeIndex];
        }
    }
    private int m_NSWGamepadSchemeIndex = -1;
    /// <summary>
    /// Provides access to the input control scheme.
    /// </summary>
    /// <seealso cref="UnityEngine.InputSystem.InputControlScheme" />
    public InputControlScheme NSWGamepadScheme
    {
        get
        {
            if (m_NSWGamepadSchemeIndex == -1) m_NSWGamepadSchemeIndex = asset.FindControlSchemeIndex("NSWGamepad");
            return asset.controlSchemes[m_NSWGamepadSchemeIndex];
        }
    }
    private int m_PlayStationSchemeIndex = -1;
    /// <summary>
    /// Provides access to the input control scheme.
    /// </summary>
    /// <seealso cref="UnityEngine.InputSystem.InputControlScheme" />
    public InputControlScheme PlayStationScheme
    {
        get
        {
            if (m_PlayStationSchemeIndex == -1) m_PlayStationSchemeIndex = asset.FindControlSchemeIndex("PlayStation");
            return asset.controlSchemes[m_PlayStationSchemeIndex];
        }
    }
    private int m_PCSchemeIndex = -1;
    /// <summary>
    /// Provides access to the input control scheme.
    /// </summary>
    /// <seealso cref="UnityEngine.InputSystem.InputControlScheme" />
    public InputControlScheme PCScheme
    {
        get
        {
            if (m_PCSchemeIndex == -1) m_PCSchemeIndex = asset.FindControlSchemeIndex("PC");
            return asset.controlSchemes[m_PCSchemeIndex];
        }
    }
    private int m_XboxSchemeIndex = -1;
    /// <summary>
    /// Provides access to the input control scheme.
    /// </summary>
    /// <seealso cref="UnityEngine.InputSystem.InputControlScheme" />
    public InputControlScheme XboxScheme
    {
        get
        {
            if (m_XboxSchemeIndex == -1) m_XboxSchemeIndex = asset.FindControlSchemeIndex("Xbox");
            return asset.controlSchemes[m_XboxSchemeIndex];
        }
    }
    /// <summary>
    /// Interface to implement callback methods for all input action callbacks associated with input actions defined by "Player" which allows adding and removing callbacks.
    /// </summary>
    /// <seealso cref="PlayerActions.AddCallbacks(IPlayerActions)" />
    /// <seealso cref="PlayerActions.RemoveCallbacks(IPlayerActions)" />
    public interface IPlayerActions
    {
        /// <summary>
        /// Method invoked when associated input action "AButton" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnAButton(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "BButton" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnBButton(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "XButton" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnXButton(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "YButton" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnYButton(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "UPButton" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnUPButton(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "DOWNButton" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnDOWNButton(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "RIGHTButton" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnRIGHTButton(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "LEFTButton" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnLEFTButton(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "R1Button" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnR1Button(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "R2Button" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnR2Button(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "L1Button" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnL1Button(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "L2Button" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnL2Button(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "HOME" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnHOME(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "PLUS" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnPLUS(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "MINUS" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnMINUS(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "CAPTURE" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnCAPTURE(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "RStickPress" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnRStickPress(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "RStick" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnRStick(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "LStick" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnLStick(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "LStickPress" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnLStickPress(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "MouseLeft" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnMouseLeft(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "MouseRight" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnMouseRight(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "MouseWheelPress" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnMouseWheelPress(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "MouseScroll" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnMouseScroll(InputAction.CallbackContext context);
    }
}
